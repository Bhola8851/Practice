///////////////////////////////////			1.1 		/////////////////////////////

1: select staff_name as name,  design_code as designationn_code from STAFF_MASTER where  Hire_Date > '01-Jan-2013' AND Staff_sal between 12000 AND 19000;

2: select Staff_code,staff_name,dept_code from STAFF_MASTER where SYSDATE-HIREDATE > 18 order by HIREDATE asc;

3: select staff_name from staff_master where MGR_CODE is null;

4: SELECT * FROM BOOK_MASTER WHERE BOOK_PUB_YEAR between '2014' AND '2015';

5: SELECT staff_name FROM STAFF_MASTER where STAFF_NAME like '%_%';


----------------------------------------------------------------------------------------------------------------------------------------------------------
///////////////////////////////////			2.1			///////////////////////////////////////
1: select staff_name,staff_sal,LPAD(STAFF_SAL,15,'$') from STAFF_MASTER;

2: select student_name ,CASE when TO_CHAR(STUDENT_DOB, 'DAY') LIKE '%SATURDAY%' then to_char(student_dob,'YYYY-MM-DD')
                                                      WHEN TO_CHAR(STUDENT_DOB, 'DAY') LIKE '%SUNDAY%' then to_char(student_dob,'YYYY-MM-DD')
                                                      else to_char(student_dob,'DD-MM-YYYY')
                                                  END as dob
	from student_master;

3: SELECT STAFF_NAME,Round(MONTHS_BETWEEN(sysdate,HIRE_DATE)) as "Months Worked" from STAFF_MASTER ORDER BY "Months Worked";

4: select * from STAFF_MASTER where to_char(HIRE_DATE,'MONTH') LIKE '%DECEMBER%' AND TO_CHAR(HIRE_DATE, 'DD') BETWEEN 1 AND 15 ;

5: SELECT STAFF_NAME,STAFF_SAL,CASE  WHEN staff_SAL >= 50000 THEN 'A'
                                  WHEN staff_SAL >= 25000 AND STAFF_SAL <50000 THEN 'B'
                                  WHEN STAFF_SAL >= 10000 AND STAFF_SAL < 25000 THEN 'C'
                                  ELSE 'D' 
                                  END as GRADE
	FROM STAFF_MASTER;

6: SELECT STAFF_NAME,HIRE_DATE,TO_CHAR(HIRE_DATE, 'fmDAY') AS DAY FROM STAFF_MASTER ORDER BY (NEXT_DAY(HIRE_DATE,'MONDAY') - HIRE_DATE) DESC;

7: SELECT INSTR('Mississippi', 'i',1,3) FROM dual;

8: SELECT TO_CHAR(NEXT_DAY(LAST_DAY(SYSDATE)-7, 'FRIDAY'),' DD MONTH, YYYY') "LAST_FRIDAY" FROM DUAL;

9: SELECT STUDENT_CODE,STUDENT_NAME,DECODE(DEPARTMENT_MASTER.DEPT_CODE,1,'ELECTRICAL',2,'ELECTRONICS','OTHERS')
	FROM STUDENT_MASTER,DEPARTMENT_MASTER WHERE STUDENT_MASTER.DEPT_CODE = DEPARTMENT_MASTER.DEPT_CODE;
	
	
--------------------------------------------------------------------------------------------------------------------------------------------------------
//////////////////////////////////////////		2.2		///////////////////////////////////////////

1: SELECT MAX(STAFF_SAL) AS MAXIMUM,MIN(STAFF_SAL) AS MINIMUM,SUM(STAFF_SAL) AS TOTAL,ROUND(AVG(STAFF_SAL)) AS AVERAGE FROM STAFF_MASTER;

2: SELECT DEPT_CODE,COUNT(MGR_CODE) AS "TOTAL NO OF MANAGERS" FROM STAFF_MASTER GROUP BY DEPT_CODE ORDER BY DEPT_CODE;

3: SELECT DEPT_CODE ,SUM(STAFF_SAL) FROM STAFF_MASTER WHERE MGR_CODE IS null  GROUP BY DEPT_CODE ;


----------------------------------------------------------------------------------------------------------------
////////////////////////////////////////////	3.1		///////////////////////////////////////////

1: SELECT DISTINCT SM.STAFF_NAME,SM.DEPT_CODE,DM.DEPT_NAME,SM.STAFF_SAL
  FROM STAFF_MASTER SM,DEPARTMENT_MASTER DM
  WHERE SM.DEPT_CODE (+)= DM.DEPT_CODE AND SM.STAFF_SAL > 20000;
  
2:  SELECT DISTINCT SM.STAFF_CODE,SM.STAFF_NAME,DM.DEPT_NAME,DM.DEPT_CODE 
  FROM STAFF_MASTER SM,DEPARTMENT_MASTER DM
  WHERE SM.DEPT_CODE (+)= DM.DEPT_CODE  
  ORDER BY SM.STAFF_CODE;
  
3:	SELECT SM.STAFF_CODE,SM.STAFF_NAME,BT.BOOK_CODE,BM.BOOK_NAME 
  FROM STAFF_MASTER SM,BOOK_TRANSACTIONS BT,BOOK_MASTER BM
  WHERE SM.STAFF_CODE (+)= BT.STAFF_CODE AND BT.BOOK_CODE (+)= BM.BOOK_CODE AND BT.BOOK_EXPECTED_RETURN_DATE LIKE SYSDATE;
	
	
4:	//QUERY IS CHANGED AS PER THE TABLE;
	SELECT SM.STAFF_CODE,SM.STAFF_NAME,BT.BOOK_CODE,BM.BOOK_NAME 
  FROM STAFF_MASTER SM,BOOK_TRANSACTIONS BT,BOOK_MASTER BM
  WHERE SM.STAFF_CODE (+)= BT.STAFF_CODE AND BT.BOOK_CODE (+)= BM.BOOK_CODE AND BT.BOOK_ISSUE_DATE >= SYSDATE - 30;
	
  
5: SELECT SM.STAFF_CODE,SM.STAFF_NAME,DM.DESIGN_NAME,BT.BOOK_CODE,BM.BOOK_NAME ,BM.BOOK_PUB_AUTHOR,ROUND(5*(SYSDATE - BT.BOOK_EXPECTED_RETURN_DATE)) AS FINE
  FROM STAFF_MASTER SM,BOOK_TRANSACTIONS BT,BOOK_MASTER BM,DESIGNATION_MASTER DM
  WHERE SM.STAFF_CODE (+)= BT.STAFF_CODE AND BT.BOOK_CODE (+)= BM.BOOK_CODE AND DM.DESIGN_CODE (+)= SM.DESIGN_CODE AND BT.BOOK_ISSUE_DATE >= SYSDATE - 30 ;
	
6: SELECT STAFF_CODE,STAFF_NAME,STAFF_SAL FROM STAFF_MASTER
   WHERE STAFF_SAL > (SELECT AVG(STAFF_SAL) FROM STAFF_MASTER) 
   group by STAFF_CODE, STAFF_NAME, STAFF_SAL;
  
  
7: select BOOK_PUB_AUTHOR,BOOK_NAME from BOOK_MASTER WHERE 
	BOOK_PUB_AUTHOR IN (SELECT BOOK_PUB_AUTHOR FROM BOOK_MASTER GROUP BY BOOK_PUB_AUTHOR HAVING COUNT(1)>1);


8: select DISTINCT SM.STAFF_CODE,SM.STAFF_NAME,DM.DEPT_NAME from DEPARTMENT_MASTER DM, BOOK_MASTER BM,BOOK_TRANSACTIONS BT, STAFF_MASTER SM WHERE 
	SM.STAFF_CODE (+)= BT.STAFF_CODE AND DM.DEPT_CODE (+) = SM.DEPT_CODE AND
	BT.STAFF_CODE IN (SELECT STAFF_CODE FROM BOOK_TRANSACTIONS GROUP BY STAFF_CODE HAVING COUNT(1)>1);
	
9: SELECT SM.STUDENT_CODE,SM.STUDENT_NAME,DM.DEPT_NAME FROM STUDENT_MASTER SM,DEPARTMENT_MASTER DM
	WHERE SM.DEPT_CODE = DM.DEPT_CODE AND 
	SM.DEPT_CODE IN (SELECT SM.DEPT_CODE FROM STUDENT_MASTER SM,DEPARTMENT_MASTER DM
	WHERE SM.DEPT_CODE (+)= DM.DEPT_CODE
	GROUP BY SM.DEPT_CODE HAVING COUNT(*) = (SELECT MAX(COUNT(STUDENT_CODE))FROM STUDENT_MASTER GROUP BY DEPT_CODE));
	
10: SELECT SM.STAFF_CODE,SM.STAFF_NAME,DM.DEPT_NAME,DS.DESIGN_NAME FROM STAFF_MASTER SM,DEPARTMENT_MASTER DM,DESIGNATION_MASTER DS 
	WHERE SM.DEPT_CODE = DM.DEPT_CODE AND SM.DESIGN_CODE = DS.DESIGN_CODE
	AND SM.STAFF_CODE IN (SELECT STAFF_CODE FROM STAFF_MASTER WHERE  TO_CHAR(HIRE_DATE,'DD-MM-YYYY') > TO_CHAR(ADD_MONTHS(SYSDATE, -3),'DD-MM-YYYY'));
	
11: 